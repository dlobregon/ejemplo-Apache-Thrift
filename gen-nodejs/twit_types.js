//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('node-thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = module.exports = {};
Twit = module.exports.Twit = function(args) {
  this.id = null;
  this.usuario = null;
  this.casaca = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.usuario !== undefined) {
      this.usuario = args.usuario;
    }
    if (args.casaca !== undefined) {
      this.casaca = args.casaca;
    }
  }
};
Twit.prototype = {};
Twit.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.usuario = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.casaca = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Twit.prototype.write = function(output) {
  output.writeStructBegin('Twit');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.usuario !== null && this.usuario !== undefined) {
    output.writeFieldBegin('usuario', Thrift.Type.STRING, 2);
    output.writeString(this.usuario);
    output.writeFieldEnd();
  }
  if (this.casaca !== null && this.casaca !== undefined) {
    output.writeFieldBegin('casaca', Thrift.Type.STRING, 3);
    output.writeString(this.casaca);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};
